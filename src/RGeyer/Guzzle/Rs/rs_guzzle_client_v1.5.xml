<?xml version="1.0" encoding="UTF-8"?>
<client>
  <commands>
    <!-- Start Clouds -->
    <command name="clouds" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List the clouds available to this account.</doc>
      <param name="path" type="string" static="clouds{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Cloud" />
    </command>
    
    <command name="cloud" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Show information about a single cloud</doc>
      <param name="path" type="string" default="clouds/{id}{output_format}" />
      <param name="method" type="string" static="GET" />      
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Cloud" />
    </command>
    
    <!-- Start Security Groups -->    
    <command name="security_groups_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a new security group</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/security_groups" />
      <param name="method" type="string" static="POST" />
      <param name="cloud_id" type="integer" required="true" location="path"/>
      <param name="security_group[name]" type="string" required="true" />
      <param name="security_group[description]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroup" />
    </command>
    
    <command name="security_groups_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Show a Security Group</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/security_groups/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="string" required="true" location="path" />
      <param name="cloud_id" type="integer" required="true" location="path"/>
    </command>
    
    <command name="security_groups" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Security Groups</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/security_groups{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="cloud_id" type="integer" required="true" location="path"/>
      <param name="filter" type="array" required="false" />
      <param name="view" type="enum:default,tiny" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroup" />
    </command>
    
    <command name="security_group" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Show one Security Group</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/security_groups/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="string" required="true" location="path" />
      <param name="cloud_id" type="integer" required="true" location="path"/>
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroup" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,tiny" required="false" />
    </command>

    <!-- Start Security Group Rules -->
    <command name="security_group_rules" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all Security Group Rules</doc>
      <param name="path" type="string" default="security_group_rules{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroupRule" />
    </command>

    <command name="security_group_rule" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single security group rule.</doc>
      <param name="path" type="string" default="security_group_rules/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroupRule" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default" required="false" />
    </command>

    <command name="security_group_rules_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a Security Group Rule</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/security_groups/{security_group_id}/security_group_rules" />
      <param name="method" type="string" static="POST" />
      <param name="cloud_id" type="integer" required="true" location="path" />
      <param name="security_group_id" type="string" required="true" location="path" />
      <param name="security_group_rule[protocol]" type="enum:tcp,udp,icmp" required="true" />
      <param name="security_group_rule[source_type]" type="enum:cidr_ips,group" required="true" />
      <param name="security_group_rule[cidr_ips]" type="string" required="false" />
      <param name="security_group_rule[group_name]" type="string" required="false" />
      <param name="security_group_rule[group_owner]" type="string" required="false" />
      <param name="security_group_rule[protocol_details][start_port]" type="string" required="false" />
      <param name="security_group_rule[protocol_details][end_port]" type="string" required="false" />
      <param name="security_group_rule[protocol_details][icmp_code]" type="string" required="false" />
      <param name="security_group_rule[protocol_details][icmp_type]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SecurityGroupRule" />
    </command>

    <command name="security_group_rules_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given security group rule.</doc>
      <param name="path" type="string" default="security_group_rules/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <!-- Start Servers -->
    <command name="servers_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new server, and configures its corresponding "next" instance with the received parameters.</doc>
      <param name="path" type="string" default="servers" />
      <param name="method" type="string" static="POST" />
      <param name="server[name]" type="string" required="true" />
      <param name="server[deployment_href]" type="string" required="true" />
      <param name="server[instance][cloud_href]" type="string" required="true" />
      <param name="server[instance][server_template_href]" type="string" required="true" />
      <param name="server[description]" type="string" required="false" />
      <param name="server[instance][datacenter_href]" type="string" required="false" />
      <param name="server[instance][image_href]" type="string" required="false" />
      <param name="server[instance][inputs]" type="array" required="false" />
      <param name="server[instance][instance_type_href]" type="string" required="false" />
      <param name="server[instance][kernel_image_href]" type="string" required="false" />
      <param name="server[instance][multi_cloud_image_href]" type="string" required="false" />
      <param name="server[instance][ramdisk_image_href]" type="string" required="false" />
      <param name="server[instance][security_group_hrefs]" type="array" required="false" />
      <param name="server[instance][ssh_key_href]" type="string" required="false" />
      <param name="server[instance][user_data]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Server" />
    </command>
    
    <command name="servers_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given server.</doc>
      <param name="path" type="string" static="servers/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>    
    
    <command name="server" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single server.</doc>
      <param name="path" type="string" static="servers/{id}{output_format}" />
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Server" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,instance_detail" required="false" />
    </command>
    
    <command name="servers_launch" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Launches the "next" instance of this server. This function is equivalent to invoking the launch action on the URL of this servers next_instance. See Instances#launch for details.</doc>
      <param name="path" type="string" static="servers/{id}/launch" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="inputs" type="array" required="false" />
    </command>

    <command name="servers" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all Servers</doc>
      <param name="path" type="string" default="servers{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default,inputs" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Server" />
    </command>

    <command name="servers_terminate" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminates the current instance of a given server.</doc>
      <param name="path" type="string" static="servers/{id}/terminate" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="true" location="path" />
    </command>

    <command name="servers_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates a server</doc>
      <param name="path" type="string" default="servers/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server[name]" type="string" required="false" />
      <param name="server[description]" type="string" required="false" />
    </command>

    <!-- Start ServerTemplates -->
    <command name="server_templates" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all ServerTemplates</doc>
      <param name="path" type="string" static="server_templates{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default,inputs" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerTemplate" />
    </command>

    <command name="server_template" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single server template.</doc>
      <param name="path" type="string" static="server_templates/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerTemplate" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,inputs" required="false" />
    </command>

    <command name="server_templates_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new ServerTemplate with the given parameters</doc>
      <param name="path" type="string" default="server_templates" />
      <param name="method" type="string" static="POST" />
      <param name="server_template[name]" type="string" required="true" />
      <param name="server_template[description]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerTemplate" />
    </command>

    <command name="server_templates_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates a server template</doc>
      <param name="path" type="string" default="server_templates/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server_template[name]" type="string" required="false" />
      <param name="server_template[description]" type="string" required="false" />
    </command>

    <command name="server_templates_clone" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Clones a given ServerTemplate</doc>
      <param name="path" type="string" default="server_templates/{id}/clone" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server_template[name]" type="string" required="true" />
      <param name="server_template[description]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerTemplate" />
    </command>

    <command name="server_templates_commit" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Commits a given ServerTemplate.  Only HEAD revisions (revision 0) that are owned by the account can be committed.</doc>
      <param name="path" type="string" default="server_templates/{id}/commit" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="commit_head_dependencies" type="enum:true,false" required="true" />
      <param name="commit_message" type="string" required="true" />
      <param name="freeze_repositories" type="enum:true,false" required="true" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerTemplate" />
    </command>

    <command name="server_templates_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given server template</doc>
      <param name="path" type="string" static="server_templates/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="string" required="true" location="path" />
    </command>

    <command name="server_templates_publish" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Publishes a given ServerTemplate and its subordinates.</doc>
      <param name="path" type="string" default="server_templates/{id}/publish" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="account_group_hrefs" type="array" required="true" />
      <param name="descriptions[long]" type="string" required="true" />
      <param name="descriptions[short]" type="string" required="true" />
      <param name="descriptions[notes]" type="string" required="false" />
      <param name="allow_comments" type="enum:true,false" required="false" />
      <param name="categories" type="array" required="false" />
      <param name="email_comments" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Publication" />
    </command>

    <!-- Start Tags -->
    <command name="tags_by_resource" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all tags for specified resource hrefs</doc>
      <param name="path" type="string" static="tags/by_resource{output_format}" />
      <param name="method" type="string" static="POST" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="resource_hrefs" type="array" required="true" />
    </command>

    <command name="tags_by_tag" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all resources matching the tag query</doc>
      <param name="path" type="string" static="tags/by_tag{output_format}" />
      <param name="method" type="string" static="POST" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="resource_type" type="enum:servers,instances,volumes,volume_snapshots,deployments,server_templates,multi_cloud_images,images,server_arrays" required="true" />
      <param name="tags" type="array" required="true" />
      <param name="include_tags_with_prefix" type="string" required="false" />
      <param name="match_all" type="enum:true,false" required="false" />
    </command>

    <command name="tags_multi_add" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Add one or many tags to one or many resources</doc>
      <param name="path" type="string" static="tags/multi_add" />
      <param name="method" type="string" static="POST" />
      <param name="resource_hrefs" type="array" required="true" />
      <param name="tags" type="array" required="true" />
    </command>

    <command name="tags_multi_delete" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes one or many tags from one or many resources</doc>
      <param name="path" type="string" static="tags/multi_delete" />
      <param name="method" type="string" static="POST" />
      <param name="resource_hrefs" type="array" required="true" />
      <param name="tags" type="array" required="true" />
    </command>

    <!-- Start Publications -->
    <command name="publications" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all Publications</doc>
      <param name="path" type="string" default="publications{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Publication" />
    </command>

    <command name="publication" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single publication.</doc>
      <param name="path" type="string" static="publications/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Publication" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default" required="false" />
    </command>

    <command name="publications_import" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Imports the specified publication.</doc>
      <param name="path" type="string" static="publications/{id}/import" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
    </command>

    <!-- Start Instances -->
    <command name="instance" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single instance.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/instances/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="string" required="true" location="path" />
      <param name="cloud_id" type="integer" required="true" location="path" />
      <!--<param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Instance" />-->
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,extended,full" required="false" />
    </command>

    <command name="instances" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all Instances</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/instances{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="cloud_id" type="integer" required="true" location="path" />
      <param name="view" type="enum:default,inputs" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
    </command>

    <command name="instances_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates attributes of a single instance.</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/instances/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="string" required="true" location="path" />
      <param name="cloud_id" type="integer" required="true" location="path" />
      <param name="instance[datacenter_href]" type="string" required="false" />
      <param name="instance[image_href]" type="string" required="false" />
      <param name="instance[inputs]" type="array" required="false" />
      <param name="instance[instance_type_href]" type="string" required="false" />
      <param name="instance[kernel_image_href]" type="string" required="false" />
      <param name="instance[multi_cloud_image_href]" type="string" required="false" />
      <param name="instance[ramdisk_image_href]" type="string" required="false" />
      <param name="instance[security_group_hrefs]" type="array" required="false" />
      <param name="instance[ssh_key_href]" type="string" required="false" />
      <param name="instance[user_data]" type="string" required="false" />
    </command>

    <command name="instances_launch" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Launches an instance using the parameters that this instance has been configured with.

Note that this action can only be performed in "next" instances, and not on instances that are already running.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/instances/{id}/launch" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="false" location="path" />
      <param name="cloud_id" type="integer" required="false" location="path" />
      <param name="inputs" type="array" required="false" />
    </command>

    <command name="instances_multi_run_executable" class="Rgeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Runs a script or a recipe in the running instances.

This is an asynchronous function, which returns immediately after queuing the executable for execution. Status of the execution can be tracked at the URL returned in the "Location" header.</doc>
    	<param name="path" type="string" default="clouds/{cloud_id}/instances/multi_run_executable" />
    	<param name="method" type="string" static="POST" />
    	<param name="cloud_id" type="integer" required="false" location="path" />
      <param name="inputs" type="array" required="false" />
      <param name="ignore_lock" type="enum:true,false" required="false" />
      <param name="recipe_name" type="string" required="false" />
      <param name="right_script_href" type="string" required="false" />
      <param name="filter" type="array" required="false" />
    </command>

    <command name="instances_multi_terminate" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminates running instances. Either a filter or the parameter 'terminate_all' must be provided.</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/instances/multi_terminate" />
      <param name="method" type="string" static="POST" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="terminate_all" type="enum:true,false" required="false" />
      <param name="filter" type="array" required="false" />
    </command>

    <command name="instances_reboot" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Reboot a running instance.

Note that this action can only succeed if the instance is running. One cannot reboot instances of type "next".</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/instances/{id}/reboot" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="true" location="path" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
    </command>

    <command name="instances_run_executable" class="Rgeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Runs a script or a recipe in the running instance.

This is an asynchronous function, which returns immediately after queuing the executable for execution. Status of the execution can be tracked at the URL returned in the "Location" header. Note that this can only be performed on running instances.

FUTURE: we plan to support flexible callbacks for this action, where the client can be notified upon completion (success or error)</doc>
    	<param name="path" type="string" static="clouds/{cloud_id}/instances/{id}/run_executable" />
    	<param name="method" type="string" static="POST" />
      <param name="id" type="string" required="true" location="path" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="inputs" type="array" required="false" />
      <param name="ignore_lock" type="enum:true,false" required="false" />
      <param name="recipe_name" type="string" required="false" />
      <param name="right_script_href" type="string" required="false" />
    </command>

    <command name="instances_start" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Starts an instance that has been stopped, resuming it to its previously saved volume state.

After an instance is started, the reference to your instance will have a different id.

The new id can be found by performing an index query with the appropriate filters on the Instances resource, performing a show action on the Server resource for Server Instances, or performing a current_instances action on the ServerArray resource for ServerArray Instances.</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/instances/{id}/start" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="true" location="path" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
    </command>

    <command name="instances_stop" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Stores the instance's current volume state to resume later using the 'start' action.

After an instance is stopped, the reference to your instance will have a different id.

The new id can be found by performing an index query with the appropriate filters on the Instances resource, performing a show action on the Server resource for Server Instances, or performing a current_instances action on the ServerArray resource for ServerArray Instances.</doc>
      <param name="path" type="string" static="clouds/{cloud_id}/instances/{id}/stop" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="true" location="path" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
    </command>

    <command name="instances_terminate" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminates a running instance.

Note that this action can succeed only if the instance is running. One cannot terminate instances of type "next".</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/instances/{id}/terminate" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="string" required="false" location="path" />
    	<param name="cloud_id" type="integer" required="false" location="path" />
    </command>
    
    <!-- MultiCloudImages -->
    <command name="multi_cloud_image" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Show information about a single multi-cloud image. HEAD revisions have a revision of 0</doc>
      <param name="path" type="string" default="multi_cloud_images/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImage" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />    	
    </command>

    <command name="multi_cloud_images" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists the multi-cloud images available to this account. HEAD revisions have a revision of 0</doc>
      <param name="path" type="string" default="multi_cloud_images{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImage" />
    </command>

    <command name="multi_cloud_images_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new MultiCloudImage with the given parameters</doc>
      <param name="path" type="string" default="multi_cloud_images" />
      <param name="method" type="string" static="POST" />
      <param name="multi_cloud_image[name]" type="string" required="true" />
      <param name="multi_cloud_image[description]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImage" />
    </command>

    <command name="multi_cloud_images_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates attributes of a given MultiCloudImage. Only HEAD revisions can be updated (revision 0). Currently, the attributes you can update are only the 'direct' attributes of a server template.</doc>
      <param name="path" type="string" default="multi_cloud_images/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="multi_cloud_image[name]" type="string" required="false" />
      <param name="multi_cloud_image[description]" type="string" required="false" />
    </command>

    <command name="multi_cloud_images_clone" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Clones a given MultiCloudImage</doc>
      <param name="path" type="string" default="multi_cloud_images/{id}/clone" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="multi_cloud_image[name]" type="string" required="true" />
      <param name="multi_cloud_image[description]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImage" />
    </command>

    <command name="multi_cloud_images_commit" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Commits a given MultiCloudImage.  Only HEAD revisions can be committed.</doc>
      <param name="path" type="string" default="multi_cloud_images/{id}/commit" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="commit_message" type="string" required="true" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImage" />
    </command>

    <command name="multi_cloud_images_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given MultiCloudImage</doc>
      <param name="path" type="string" default="multi_cloud_images/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="string" required="true" location="path" />
    </command>
    
    <!-- MultiCloudImageSettings -->
    <command name="multi_cloud_image_setting" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Show information about a single MultiCloudImage setting.</doc>
      <param name="path" type="string" default="multi_cloud_images/{mci_id}/settings/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="mci_id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImageSetting" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />    	
    </command>

    <command name="multi_cloud_image_settings" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists the MultiCloudImage settings</doc>
      <param name="path" type="string" default="multi_cloud_images/{mci_id}/settings{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="mci_id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImageSetting" />
    </command>

    <command name="multi_cloud_image_settings_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new generic cloud setting for an existing MultiCloudImage</doc>
      <param name="path" type="string" default="multi_cloud_images/{mci_id}/settings" />
      <param name="method" type="string" static="POST" />
      <param name="mci_id" type="integer" required="true" location="path" />
      <param name="multi_cloud_image_setting[cloud_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[instance_type_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[kernel_image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[ramdisk_image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[user_data]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\MultiCloudImageSetting" />
    </command>

    <command name="multi_cloud_image_settings_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new generic cloud setting</doc>
      <param name="path" type="string" default="multi_cloud_images/{mci_id}/settings/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="mci_id" type="integer" required="true" location="path" />
      <param name="multi_cloud_image_setting[cloud_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[instance_type_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[kernel_image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[ramdisk_image_href]" type="string" required="false" />
      <param name="multi_cloud_image_setting[user_data]" type="string" required="false" />
    </command>

    <command name="multi_cloud_image_settings_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a MultiCloudImage setting</doc>
      <param name="path" type="string" default="multi_cloud_images/{mci_id}/settings/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="string" required="true" location="path" />
      <param name="mci_id" type="integer" required="true" location="path" />
    </command>

    <!-- Start ServerArrays -->
    <command name="server_arrays" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Server Arrays</doc>
      <param name="path" type="string" default="server_arrays{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default,instance_detail" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerArray" />
    </command>    
    
    <command name="server_array" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single server array.</doc>
      <param name="path" type="string" default="server_arrays/{id}{output_format}" />
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerArray" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,instance_detail" required="false" />
    </command>
    
    <command name="server_arrays_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new server array, and configures its corresponding "next" instance with the received parameters.</doc>
      <param name="path" type="string" default="server_arrays" />
      <param name="method" type="string" static="POST" />
      <param name="server_array[array_type]" type="enum:alert,queue" required="true" />
      <param name="server_array[name]" type="string" required="true" />
      <param name="server_array[state]" type="enum:enabled,disabled" required="true" />
      <param name="server_array[instance][cloud_href]" type="string" required="true" />      
      <param name="server_array[instance][server_template_href]" type="string" required="true" />
      <param name="server_array[elasticity_params][bounds][max_count]" type="string" required="true" />
      <param name="server_array[elasticity_params][bounds][min_count]" type="string" required="true" />
      <param name="server_array[elasticity_params][pacing][resize_calm_time]" type="string" required="true" />
      <param name="server_array[elasticity_params][pacing][resize_down_by]" type="string" required="true" />
      <param name="server_array[elasticity_params][pacing][resize_up_by]" type="string" required="true" />      
      <param name="server_array[datacenter_policy]" type="array" required="false" doc="An array containing one or many associative arrays with the keys ['datacenter_href', 'max', 'weight']" />
      <param name="server_array[deployment_href]" type="string" required="false" />
      <param name="server_array[description]" type="string" required="false" />
      <param name="server_array[elasticity_params][alert_specific_params][decision_threshold]" type="string" required="false" />
      <param name="server_array[elasticity_params][alert_specific_params][voters_tag_predicate]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][collect_audit_entries]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][algorithm]" type="enum:max_10,avg_10" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][max_age]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][regexp]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]" type="string" required="false" />
      <param name="server_array[elasticity_params][schedule]" type="array" required="false" doc="An array containing one or many associative arrays with the keys ['day', 'max_count', 'min_count', 'time']" />
      <param name="server_array[instance][datacenter_href]" type="string" required="false" />
      <param name="server_array[instance][image_href]" type="string" required="false" />
      <param name="server_array[instance][inputs]" type="array" required="false" doc="An array containing one or many associative arrays with the keys ['name', 'value']" />
      <param name="server_array[instance][instance_type_href]" type="string" required="false" />
      <param name="server_array[instance][kernel_image_href]" type="string" required="false" />
      <param name="server_array[instance][multi_cloud_image_href]" type="string" required="false" />
      <param name="server_array[instance][ramdisk_image_href]" type="string" required="false" />
      <param name="server_array[instance][security_group_hrefs]" type="array" required="false" />
      <param name="server_array[instance][ssh_key_href]" type="string" required="false" />
      <param name="server_array[instance][user_data]" type="string" required="false" />      
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\ServerArray" />
    </command>
    
    <command name="server_arrays_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new server array, and configures its corresponding "next" instance with the received parameters.</doc>
      <param name="path" type="string" default="server_arrays/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server_array[array_type]" type="enum:alert,queue" required="false" />
      <param name="server_array[name]" type="string" required="false" />
      <param name="server_array[state]" type="enum:enabled,disabled" required="false" />
      <param name="server_array[instance][cloud_href]" type="string" required="false" />      
      <param name="server_array[instance][server_template_href]" type="string" required="false" />
      <param name="server_array[elasticity_params][bounds][max_count]" type="string" required="false" />
      <param name="server_array[elasticity_params][bounds][min_count]" type="string" required="false" />
      <param name="server_array[elasticity_params][pacing][resize_calm_time]" type="string" required="false" />
      <param name="server_array[elasticity_params][pacing][resize_down_by]" type="string" required="false" />
      <param name="server_array[elasticity_params][pacing][resize_up_by]" type="string" required="false" />
      <param name="server_array[elasticity_params][alert_specific_params][decision_threshold]" type="string" required="false" />
      <param name="server_array[datacenter_policy]" type="array" required="false" doc="An array containing one or many associative arrays with the keys ['datacenter_href', 'max', 'weight']" />
      <param name="server_array[deployment_href]" type="string" required="false" />
      <param name="server_array[description]" type="string" required="false" />
      <param name="server_array[elasticity_params][alert_specific_params][voters_tag_predicate]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][collect_audit_entries]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][algorithm]" type="enum:max_10,avg_10" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][max_age]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][item_age][regexp]" type="string" required="false" />
      <param name="server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]" type="string" required="false" />
      <param name="server_array[elasticity_params][schedule]" type="array" required="false" doc="An array containing one or many associative arrays with the keys ['day', 'max_count', 'min_count', 'time']" />
    </command>

    <command name="server_arrays_current_instances" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all Current Instances and the Next Instance</doc>
      <param name="path" type="string" default="server_arrays/{id}/current_instances{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="view" type="enum:default,extended,full" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
    </command>

    <command name="server_arrays_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a server array</doc>
      <param name="path" type="string" default="server_arrays/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="server_arrays_launch" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Launches the "next" instance of this server. This function is equivalent to invoking the launch action on the URL of this server arrays next_instance. See Instances#launch for details.</doc>
      <param name="path" type="string" static="server_arrays/{id}/launch" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="inputs" type="array" required="false" />
    </command>
    
    <command name="server_arrays_multi_run_executable" class="Rgeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Run an executable on all instances of this array. This function is equivalent to invoking the "multi_run_executable" action on the instances resource (Instances#multi_run_executable with the filter "parent_href == /api/server_arrays/XX"). To run an executable on a subset of the instances of the array, provide additional filters. To run an executable a single instance, invoke the action "run_executable" directly on the instance (see Instances#run_executable)</doc>
    	<param name="path" type="string" default="server_arrays/{id}/multi_run_executable" />
    	<param name="method" type="string" static="POST" />
    	<param name="id" type="integer" required="true" />
      <param name="inputs" type="array" required="false" />
      <param name="ignore_lock" type="enum:true,false" required="false" />
      <param name="recipe_name" type="string" required="false" />
      <param name="right_script_href" type="string" required="false" />
      <param name="filter" type="array" required="false" />
    </command>
    
    <command name="server_arrays_multi_terminate" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminates running instances. Either a filter or the parameter 'terminate_all' must be provided.</doc>
      <param name="path" type="string" static="server_arrays/{id}/multi_terminate" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="terminate_all" type="enum:true,false" required="false" />
      <param name="filter" type="array" required="false" />      
    </command>

    <!-- Start AlertSpecs -->
    <command name="alert_specs" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>List all AlertSpecs</doc>
      <param name="path" type="string" default="alert_specs{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\AlertSpec" />
    </command>    
    
    <command name="alert_spec" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows the information of a single alert spec</doc>
      <param name="path" type="string" default="alert_specs/{id}{output_format}" />
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\AlertSpec" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default" required="false" />
    </command>
    
    <command name="alert_specs_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new AlertSpec with the given parameters.</doc>
      <param name="path" type="string" default="alert_specs" />
      <param name="method" type="string" static="POST" />
      <param name="alert_spec[condition]" type="enum:&gt;,&gt;=,&lt;,&lt;=,==,!=" required="true" />
      <param name="alert_spec[duration]" type="string" required="true" />
      <param name="alert_spec[file]" type="string" required="true" />
      <param name="alert_spec[name]" type="string" required="true" />      
      <param name="alert_spec[threshold]" type="string" required="true" />
      <param name="alert_spec[variable]" type="string" required="true" />      
      <param name="alert_spec[description]" type="string" required="false" />
      <param name="alert_spec[escalation_name]" type="string" required="false" />
      <param name="alert_spec[subject_href]" type="string" required="false" />
      <param name="alert_spec[vote_tag]" type="string" required="false" />
      <param name="alert_spec[vote_type]" type="enum:grow,shrink" required="false" />      
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\AlertSpec" />
    </command>
    
    <command name="alert_specs_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates an AlertSpec with the given parameters.</doc>
      <param name="path" type="string" default="alert_specs/{id}" />
      <param name="method" type="string" static="PUT" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="alert_spec[condition]" type="enum:&gt;,&gt;=,&lt;,&lt;=,==,!=" required="false" />
      <param name="alert_spec[duration]" type="string" required="false" />
      <param name="alert_spec[file]" type="string" required="false" />
      <param name="alert_spec[name]" type="string" required="false" />      
      <param name="alert_spec[threshold]" type="string" required="false" />
      <param name="alert_spec[variable]" type="string" required="false" />      
      <param name="alert_spec[description]" type="string" required="false" />
      <param name="alert_spec[escalation_name]" type="string" required="false" />
      <param name="alert_spec[vote_tag]" type="string" required="false" />
      <param name="alert_spec[vote_type]" type="enum:grow,shrink" required="false" />
    </command>

    <command name="alert_specs_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given AlertSpec.</doc>
      <param name="path" type="string" default="alert_specs/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="string" required="true" location="path" />
    </command>

    <!-- Start Deployments -->
    <command name="deployments" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists deployments of the account.

Using the available filters, one can select or group which deployments to retrieve. The 'inputs20' view is for retrieving inputs in 2.0 serialization (for more details please see Inputs#index.)</doc>
      <param name="path" type="string" static="deployments{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="view" type="enum:default,inputs,inputs_2_0" required="false" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Deployment" />
    </command>

    <command name="deployment" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists the attributes of a given deployment.

The 'inputs20' view is for retrieving inputs in 2.0 serialization (for more details please see Inputs#index.)</doc>
      <param name="path" type="string" static="deployments/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Deployment" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default,inputs,inputs_2_0" required="false" />
    </command>

    <command name="deployments_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new deployment with the given parameters.</doc>
      <param name="path" type="string" static="deployments" />
      <param name="method" type="string" static="POST" />
      <param name="deployment[name]" type="string" required="true" />
      <param name="deployment[description]" type="string" required="false" />
      <param name="deployment[server_tag_scope]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Deployment" />
    </command>

    <command name="deployments_update" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates attributes of a given deployment.</doc>
      <param name="path" type="string" static="deployments/{id}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="deployment[name]" type="string" required="false" />
      <param name="deployment[description]" type="string" required="false" />
      <param name="deployment[server_tag_scope]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Deployment" />
    </command>

    <command name="deployments_clone" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Clones a given deployment.</doc>
      <param name="path" type="string" static="deployments/{id}/clone" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="deployment[name]" type="string" required="false" />
      <param name="deployment[description]" type="string" required="false" />
      <param name="deployment[server_tag_scope]" type="string" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\Deployment" />
    </command>

    <command name="deployments_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given deployment.</doc>
      <param name="path" type="string" default="deployments/{id}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>

    <!-- SshKeys -->
    <command name="ssh_key" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
    	<doc>Displays information about a single ssh key.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/ssh_keys/{id}{output_format}" />
      <param name="method" type="string" static="GET" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="id" type="string" required="true" location="path" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SshKey" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="view" type="enum:default" required="false" />
    </command>

    <command name="ssh_keys" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists ssh keys.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/ssh_keys{output_format}" />
      <param name="method" type="string" static="GET" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.json,.xml" default=".json" location="path" />
      <param name="filter" type="array" required="false" />
      <param name="view" type="enum:default" required="false" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SshKey" />
    </command>

    <command name="ssh_keys_create" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Creates a new ssh key.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/ssh_keys" />
      <param name="method" type="string" static="POST" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="ssh_key[name]" type="string" required="true" />
      <param name="return_class" type="string" static="RGeyer\Guzzle\Rs\Model\Mc\SshKey" />
    </command>

    <command name="ssh_keys_destroy" class="RGeyer.Guzzle.Rs.Command.DefaultCommand">
      <doc>Deletes a given ssh key.</doc>
      <param name="path" type="string" default="clouds/{cloud_id}/ssh_keys/{id}" />
      <param name="method" type="string" static="DELETE" />
    	<param name="cloud_id" type="integer" required="true" location="path" />
      <param name="id" type="string" required="true" location="path" />
    </command>
    
  </commands>
</client>
