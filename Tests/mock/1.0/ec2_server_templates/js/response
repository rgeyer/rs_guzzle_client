HTTP/1.1 200 OK
Server: nginx/1.0.5
Date: Thu, 29 Dec 2011 00:08:48 GMT
Content-Type: text/javascript; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
Vary: Accept-Encoding
Vary: Accept-Encoding
Status: 200
X-Powered-By: Phusion Passenger (mod_rails/mod_rack) 3.0.7
X-Runtime: 116
Set-Cookie: _session_id=1b3d5d7be0c682dca99c1a1254f14bec; path=/; Secure; HttpOnly
Cache-Control: private, max-age=0, must-revalidate
Content-Encoding: gzip

[{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2010/12/04 04:04:37 +0000","version":0,"nickname":"Linode Replacement","updated_at":"2011/02/03 19:56:16 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting web sites/applications and email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates a 10GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.  Aside from the EBS volume for storing configuration and application data, all other usage of this template falls within the free tier.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 10GB EBS Volume $1.00/mo\n* 1GB EBS Volume $0.10/mo\n* 7GB EBS Snapshot Storage (The 1GB configuration/application data volume, full, with 7 days of history, which is the default) $1.05/mo\n\nThat totals out to $11.76/mo, which leaves $3.24 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LAMP Virtual Hosting ##\nThe web hosting environment is a full LAMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Apache2 - 2.2.14 (Ubuntu 8.4)\n* MySQL - 5.1.41-3 (Ubuntu 12.9)\n* PHP - 5.3.2-1 (Ubuntu 4.7)\n\n## Email Virtual Hosting ##\nIn addition to the LAMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n## Developer Tools & Libraries ##\nThere are also some services and libraries which get installed that will be useful for developers, and which I depend upon for my instance of the server.\n\n* Zend Framework - 1.11.1\n* Gitosis - Latest HEAD revision from git://eagain.net/gitosis.git\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n* GIT - TCP:9418\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n* Gitosis Private Key\n\n  You can leave this blank, in which case a new SSH RSA key will be created for Gitosis to use.  Best practice is to use a key which has been imported into AWS, and is available in the dropdown when \"Key\" is selected in the RightScale dashboard.\n\n![Gitosis Private Key Input Screenshot](http://farm6.static.flickr.com/12345/5411803592_2f13c80854_o.png)\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nTODO\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n## Gitosis ##\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * Postfix not running\n  * MySQL high load\n  * MySQL not running\n  * Low memory\n  * Low disk space on AIO EBS\n  * Apache high load\n  * Apache not running\n* Deployment/management recipes for Zend Framework apps\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Consider swapping apache2 for nginx\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2010/12/24 01:51:39 +0000","version":0,"nickname":"Linode Replacement v1","updated_at":"2010/12/24 01:51:39 +0000","description":""},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/01/24 18:14:58 +0000","version":1,"nickname":"Linode Replacement","updated_at":"2011/01/24 18:14:58 +0000","description":""},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/01/27 17:38:21 +0000","version":2,"nickname":"Linode Replacement","updated_at":"2011/01/27 17:38:21 +0000","description":""},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/02/02 20:18:36 +0000","version":0,"nickname":"LNMP & Email Vhosting All-In-One with Nginx, PHP5-FPM, MySQL 5.1, and Postfix - Rev3","updated_at":"2011/10/03 21:36:00 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting PHP based web sites/applications, as well as email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates an 8GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.  The default size for this partition is 2GB.  Combined with the 8GB root partition the total EBS footprint is exactly 10GB, the maximum for the AWS free tier.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 8GB EBS Volume $0.80/mo\n* 2GB EBS Volume $0.20/mo\n* 14GB EBS Snapshot Storage (The 2GB configuration/application data volume, full, with 7 days of history, which is the default) $2.10/mo\n\nThat totals out to $12.71/mo, which leaves $2.29 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LNMP Virtual Hosting ##\nThe web hosting environment is a full LNMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Nginx - 1.0.2\n* MySQL - 5.1.41-3 (Ubuntu 12.10)\n* PHP - 5.3.3-1 (Ubuntu 9.3)\n\n## Email Virtual Hosting ##\nIn addition to the LNMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.  **NOTE**: The default is 2GB\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# Change Log #\n* Rev 1\n  * Initial release\n* Rev 2\n  * Replaced Apache with Nginx\n  * Running PHP5 FPM application server rather than a PHP module for Apache or Nginx\n  * Dropped incomplete support for Zend Framework\n  * Dropped Gitosis as a default, since I imagine I'm the only person using it, and it's a bit out of place\n  * Added Alerts for critical systems and failure/limp conditions\n  * New MCI which includes RightLink 5.6.28 and creates an 8GB root partition rather than 10GB\n  * Added ability to connect this server with the [Opscode](http://www.opscode.com/platform/) Chef platform to further customize your instance\n\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * MySQL high load\n  * Low memory\n  * Nginx high load\n* Reconsider ZendFramework support\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/02/03 20:08:46 +0000","version":1,"nickname":"Web (LAMP) & Email (Postfix) vhost AIO - BETA Rev1","updated_at":"2011/02/03 21:09:11 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting web sites/applications and email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates a 10GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.  Aside from the EBS volume for storing configuration and application data, all other usage of this template falls within the free tier.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 10GB EBS Volume $1.00/mo\n* 1GB EBS Volume $0.10/mo\n* 7GB EBS Snapshot Storage (The 1GB configuration/application data volume, full, with 7 days of history, which is the default) $1.05/mo\n\nThat totals out to $11.76/mo, which leaves $3.24 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LAMP Virtual Hosting ##\nThe web hosting environment is a full LAMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Apache2 - 2.2.14 (Ubuntu 8.4)\n* MySQL - 5.1.41-3 (Ubuntu 12.9)\n* PHP - 5.3.2-1 (Ubuntu 4.7)\n\n## Email Virtual Hosting ##\nIn addition to the LAMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n## Developer Tools & Libraries ##\nThere are also some services and libraries which get installed that will be useful for developers, and which I depend upon for my instance of the server.\n\n* Zend Framework - 1.11.1\n* Gitosis - Latest HEAD revision from git://eagain.net/gitosis.git\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n* GIT - TCP:9418\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n* Gitosis Private Key\n\n  You can leave this blank, in which case a new SSH RSA key will be created for Gitosis to use.  Best practice is to use a key which has been imported into AWS, and is available in the dropdown when \"Key\" is selected in the RightScale dashboard.\n\n![Gitosis Private Key Input Screenshot](http://farm6.static.flickr.com/12345/5411803592_2f13c80854_o.png)\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n## Gitosis ##\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * Postfix not running\n  * MySQL high load\n  * MySQL not running\n  * Low memory\n  * Low disk space on AIO EBS\n  * Apache high load\n  * Apache not running\n* Deployment/management recipes for Zend Framework apps\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Consider swapping apache2 for nginx\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/03/15 17:44:28 +0000","version":0,"nickname":"RightGrid Ruby/GIT Worker v1","updated_at":"2011/03/16 01:32:17 +0000","description":""},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/03/17 22:44:46 +0000","version":0,"nickname":"RightGrid Census Geo Coordinator","updated_at":"2011/03/17 23:31:07 +0000","description":""},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/03/31 01:10:06 +0000","version":11,"nickname":"Rails App Server - 11H1","updated_at":"2011/03/31 01:10:06 +0000","description":"Rails application server running a cluster of mongrels.\n*----*\nThis ServerTemplate is part of a [compatibility release.](http://support.rightscale.com/12345-Guides/RightScale_Methodologies/Compatibility_Release)\n"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/04/19 19:39:30 +0000","version":0,"nickname":"RVM binary gemset builder","updated_at":"2011/04/19 19:43:54 +0000","description":""},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/05/19 18:04:24 +0000","version":2,"nickname":"LNMP & Email Vhosting All-In-One with Nginx, PHP5-FPM, MySQL 5.1, and Postfix - Rev2","updated_at":"2011/05/19 19:36:28 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting PHP based web sites/applications, as well as email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates an 8GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.  The default size for this partition is 2GB.  Combined with the 8GB root partition the total EBS footprint is exactly 10GB, the maximum for the AWS free tier.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 8GB EBS Volume $0.80/mo\n* 2GB EBS Volume $0.20/mo\n* 14GB EBS Snapshot Storage (The 2GB configuration/application data volume, full, with 7 days of history, which is the default) $2.10/mo\n\nThat totals out to $12.71/mo, which leaves $2.29 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LNMP Virtual Hosting ##\nThe web hosting environment is a full LNMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Nginx - 1.0.2\n* MySQL - 5.1.41-3 (Ubuntu 12.10)\n* PHP - 5.3.3-1 (Ubuntu 9.3)\n\n## Email Virtual Hosting ##\nIn addition to the LNMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.  **NOTE**: The default is 2GB\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# Change Log #\n* Rev 1\n  * Initial release\n* Rev 2\n  * Replaced Apache with Nginx\n  * Running PHP5 FPM application server rather than a PHP module for Apache or Nginx\n  * Dropped incomplete support for Zend Framework\n  * Dropped Gitosis as a default, since I imagine I'm the only person using it, and it's a bit out of place\n  * Added Alerts for critical systems and failure/limp conditions\n  * New MCI which includes RightLink 5.6.28 and creates an 8GB root partition rather than 10GB\n  * Added ability to connect this server with the [Opscode](http://www.opscode.com/platform/) Chef platform to further customize your instance\n\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * MySQL high load\n  * Low memory\n  * Nginx high load\n* Reconsider ZendFramework support\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/06/01 00:18:55 +0000","version":3,"nickname":"LNMP & Email Vhosting All-In-One with Nginx, PHP5-FPM, MySQL 5.1, and Postfix - Rev3","updated_at":"2011/06/01 00:20:29 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting PHP based web sites/applications, as well as email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates an 8GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.  The default size for this partition is 2GB.  Combined with the 8GB root partition the total EBS footprint is exactly 10GB, the maximum for the AWS free tier.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 8GB EBS Volume $0.80/mo\n* 2GB EBS Volume $0.20/mo\n* 14GB EBS Snapshot Storage (The 2GB configuration/application data volume, full, with 7 days of history, which is the default) $2.10/mo\n\nThat totals out to $12.71/mo, which leaves $2.29 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LNMP Virtual Hosting ##\nThe web hosting environment is a full LNMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Nginx - 1.0.2\n* MySQL - 5.1.41-3 (Ubuntu 12.10)\n* PHP - 5.3.3-1 (Ubuntu 9.3)\n\n## Email Virtual Hosting ##\nIn addition to the LNMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.  **NOTE**: The default is 2GB\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# Change Log #\n* Rev 1\n  * Initial release\n* Rev 2\n  * Replaced Apache with Nginx\n  * Running PHP5 FPM application server rather than a PHP module for Apache or Nginx\n  * Dropped incomplete support for Zend Framework\n  * Dropped Gitosis as a default, since I imagine I'm the only person using it, and it's a bit out of place\n  * Added Alerts for critical systems and failure/limp conditions\n  * New MCI which includes RightLink 5.6.28 and creates an 8GB root partition rather than 10GB\n  * Added ability to connect this server with the [Opscode](http://www.opscode.com/platform/) Chef platform to further customize your instance\n\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * MySQL high load\n  * Low memory\n  * Nginx high load\n* Reconsider ZendFramework support\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/06/28 17:45:18 +0000","version":2,"nickname":"Database Manager for Microsoft SQL Server - Beta","updated_at":"2011/06/28 17:45:18 +0000","description":"This is a premium ServerTemplate that configures Microsoft SQL Server database servers that act as a primary database server only. Microsoft SQL Server data will be stored using EBS Volumes with EBS Snapshots being used for database backups. It contains smart volume configuration and VSS-backed sane snapshot policy for database backups. It has best practice disk configuration for system and user databases, as well as configuration for log and tempdb. Also included are built in monitoring and alerts on CPU, memory and disk."},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/26 18:44:47 +0000","version":0,"nickname":"TATA CentOS SmokeTest","updated_at":"2011/07/26 21:30:07 +0000","description":""},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:04:57 +0000","version":11,"nickname":"Httperf Load Tester","updated_at":"2011/07/28 16:04:58 +0000","description":"Httperf is a tool for measuring web server performance. It provides a flexible facility for generating various HTTP workloads and for measuring server performance."},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:09:29 +0000","version":21,"nickname":"PHP App Server (Chef) - Alpha","updated_at":"2011/07/28 16:09:30 +0000","description":"This ServerTemplate configures a PHP application server with Apache. It is designed to work in a hybrid cloud setting, and with load balancer and database templates as part of a 3-tier web architecture. It also includes iptables management for clouds that do not have firewall services. \n\n* iptables management within a 3-tier scalable web architecture\n* Utilizes RightScale tag-based routing for connecting to load balancers\n* Pulls application code from an external repository\n* Support for multiple clouds (AWS, Cloud.com, Eucalyptus, Rackspace)\n\n- - - \nIMPORTANT: THIS IS AN ALPHA VERSION. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/).\n- - -"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:09:41 +0000","version":13,"nickname":"Load Balancer (Chef) - Alpha","updated_at":"2011/07/28 16:09:41 +0000","description":"This ServerTemplate configures a HAProxy Load Balancer and Apache server. It is designed to work in a hybrid cloud setting, and with application server and database templates as part of a 3-tier web architecture. It also includes iptables management for clouds that do not have firewall services. \n\n* Supports both http and https\n* iptables management within a 3-tier scalable web architecture\n* Utilizes RightScale tag-based routing for connecting to application servers\n* Support for multiple clouds (AWS, Cloud.com, Eucalyptus, Rackspace)\n\n- - -\nIMPORTANT: THIS IS AN ALPHA VERSION. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/).\n- - -\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:09:51 +0000","version":16,"nickname":"Database Manager for MySQL 5.1 (Chef) - Alpha","updated_at":"2011/07/28 16:09:51 +0000","description":"Configures a single MySQL 5.1 database server. Support for multiple clouds, using either instance-based storage or attachable volumes. Instance-based snapshot backups are automatically uploaded to your choice of remote object storage (Amazon S3 or Rackspace Cloud Files). It also includes iptables management for clouds that do not have firewall services. \n\n* Master role only\n* Use of LVM volumes for instance-based storage and snapshots\n* Continuous snapshot backups using a grandfather-father-son paradigm\n* Assisted database restoration\n* iptables management within a 3-tier scalable web architecture\n* Pre-configured monitoring and alerts\n* Support for multiple clouds (AWS, Rackspace)\n\n*---*\n*NOTE:  Do not mix the cloud storage types for performing database backups and restorations. It is recommended that you use remote object storage for performing multi-cloud backup and restore.*\n- - -\nIMPORTANT: THIS IS AN ALPHA VERSION OF A CHEF TEMPLATE. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/). \n- - - "},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:10:21 +0000","version":0,"nickname":"Database Manager for MySQL 5.1 (Chef) - Alpha v1 Multi-Cloud Mutt","updated_at":"2011/08/26 22:52:02 +0000","description":"Configures a single MySQL 5.1 database server. Support for multiple clouds, using either instance-based storage or attachable volumes. Instance-based snapshot backups are automatically uploaded to your choice of remote object storage (Amazon S3 or Rackspace Cloud Files). It also includes iptables management for clouds that do not have firewall services. \n\n* Master role only\n* Use of LVM volumes for instance-based storage and snapshots\n* Continuous snapshot backups using a grandfather-father-son paradigm\n* Assisted database restoration\n* iptables management within a 3-tier scalable web architecture\n* Pre-configured monitoring and alerts\n* Support for multiple clouds (AWS, Rackspace)\n\n*---*\n*NOTE:  Do not mix the cloud storage types for performing database backups and restorations. It is recommended that you use remote object storage for performing multi-cloud backup and restore.*\n- - -\nIMPORTANT: THIS IS AN ALPHA VERSION OF A CHEF TEMPLATE. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/). \n- - - "},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 16:58:34 +0000","version":0,"nickname":"Load Balancer (Chef) - Alpha v1 Multi-Cloud Mutt","updated_at":"2011/08/26 22:52:53 +0000","description":"This ServerTemplate configures a HAProxy Load Balancer and Apache server. It is designed to work in a hybrid cloud setting, and with application server and database templates as part of a 3-tier web architecture. It also includes iptables management for clouds that do not have firewall services. \n\n* Supports both http and https\n* iptables management within a 3-tier scalable web architecture\n* Utilizes RightScale tag-based routing for connecting to application servers\n* Support for multiple clouds (AWS, Cloud.com, Eucalyptus, Rackspace)\n\n- - -\nIMPORTANT: THIS IS AN ALPHA VERSION. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/).\n- - -\n"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/07/28 17:58:43 +0000","version":0,"nickname":"PHP App Server (Chef) - Alpha v1 Multi-Cloud Mutt","updated_at":"2011/08/26 22:51:31 +0000","description":"This ServerTemplate configures a PHP application server with Apache. It is designed to work in a hybrid cloud setting, and with load balancer and database templates as part of a 3-tier web architecture. It also includes iptables management for clouds that do not have firewall services. \n\n* iptables management within a 3-tier scalable web architecture\n* Utilizes RightScale tag-based routing for connecting to load balancers\n* Pulls application code from an external repository\n* Support for multiple clouds (AWS, Cloud.com, Eucalyptus, Rackspace)\n\n- - - \nIMPORTANT: THIS IS AN ALPHA VERSION. IT SHOULD ONLY BE USED OR TESTING PURPOSES AND NEVER IN PRODUCTION DEPLOYMENTS. THE TEMPLATE MAY GO THROUGH SIGNIFICANT CHANGES BEFORE IT IS OFFICIALLY RELEASED. YOU ARE WELCOME TO USE IT AND WE APPRECIATE [FEEDBACK](http://feedback.rightscale.com/).\n- - -"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/08/05 18:36:20 +0000","version":10,"nickname":"Base ServerTemplate for Windows","updated_at":"2011/08/05 18:36:21 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development in Windows. This template includes the following, which represent basic RightScale ServerTemplate functionality and how to harness Powershell within RightScripts:  \n  \n* Basic set of PowerShell scripts for a RightLink-based server with monitoring, alerts, etc.\n\n* MultiCloud Images that reference the latest supported images.\n\n* Basic set of alerts for monitoring.\n\n* Examples of system required input variables.\n*----*"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/08/11 23:37:39 +0000","version":6,"nickname":"LAMP All-In-One with MySQL 5.1 (Chef) - Beta","updated_at":"2011/08/11 23:37:39 +0000","description":"Basic all-in-one LAMP server (Linux, Apache, MySQL, PHP) designed to work in a hybrid cloud setting. This server takes regular backups of the MySQL 5.0 database and saves them to public cloud storage. Suitable for single server test, development and production (non-redundant) purposes.\n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com\n    * Rackspace\n\nSupported backup clouds:\n\n    * Amazon Web Services S3\n    * Rackspace CloudFiles\n"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/08/16 18:24:08 +0000","version":0,"nickname":"LAMP All-In-One with MySQL 5.1 (Chef) - Ubuntu RAX","updated_at":"2011/08/16 18:24:23 +0000","description":"Basic all-in-one LAMP server (Linux, Apache, MySQL, PHP) designed to work in a hybrid cloud setting. This server takes regular backups of the MySQL 5.0 database and saves them to public cloud storage. Suitable for single server test, development and production (non-redundant) purposes.\n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com\n    * Rackspace\n\nSupported backup clouds:\n\n    * Amazon Web Services S3\n    * Rackspace CloudFiles\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/08/27 18:56:55 +0000","version":2,"nickname":"Dev Team All in One v1","updated_at":"2011/08/27 18:56:56 +0000","description":"Starting a new development group, or project?  Need version control, continuous integration, and library management?  Look no further!\n\nDescription\n=======\nThis server template is being used to host all of the services for our development team.  Git and gitosis for version control, TeamCity for continuous integration, and Artifactory for library management.\n\nQuick Start\n=======\nWhen the server first starts up, it will be running Tomcat6, Apache, and MySQL with monitoring, but none of the actual development services.  The installation and configuration scripts for those services are setup as operational scripts to allow you to only fire up the services you need.\n\nYou can just as easily clone the server template and move the install scripts from operation to boot, they're designed to work either way.\n\nDon't forget to enable continuous backups for the services you run, just in case you need to setup a new instance in case of a disaster, or to move your dev system to a bigger instance."},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/09/14 19:17:14 +0000","version":18,"nickname":"Base ServerTemplate for Linux","updated_at":"2011/09/14 19:17:14 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/09/29 15:28:36 +0000","version":0,"nickname":"Base ServerTemplate for Linux - CloudOpt Test","updated_at":"2011/09/29 15:28:54 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/10/03 22:54:13 +0000","version":2,"nickname":"Database Manager for MySQL 5.1 (Chef) - Beta","updated_at":"2011/10/03 22:54:13 +0000","description":"Configures a single MySQL 5.1 database server. Support for multiple clouds, using either instance-based storage or attachable volumes. Instance-based snapshot backups are automatically uploaded to your choice of remote object storage (Amazon S3 or Rackspace Cloud Files). It also includes iptables management for clouds that do not have firewall services. \n\n* Master role only\n* Uses attachable volumes or instance-based LVM volumes\n* Continuous snapshot backups using a grandfather-father-son paradigm\n* Assisted database restoration\n* iptables management within a 3-tier scalable web architecture\n* Pre-configured monitoring and alerts\n\nPlease read the [Database Manager for MySQL 5.1 (Chef) Guide](http://support.rightscale.com/12345-Tutorials/12345-AWS/12345-Website_Edition/Database_Setups/12345.1_MySQL_Setup/Create_a_MySQL-EBS_Database_Setup/Database_Manager_with_MySQL_5.1_%28Chef%29_-_Alpha) to get started.\n\nSupported compute clouds:\n\n    * Amazon Web Services EC2 w/ EBS Volume Snapshot Support\n    * CloudStack from Cloud.com w/ Volume Snapshot Support\n    * Eucalyptus w/ Volume Snapshot Support\n    * Rackspace \n\nSupported backup storage:\n\n    * Amazon Web Services S3\n    * Rackspace CloudFiles\n\n*---*\n*NOTE:  Do not mix the cloud storage types for performing database backups and restorations. It is recommended that you use remote object storage for performing multi-cloud backup and restore.*\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/10/13 23:35:13 +0000","version":25,"nickname":"Membase Server - Community Edition","updated_at":"2011/10/13 23:35:13 +0000","description":"Installs the Membase Server Community Edition.\n\n***\nMembase is a simple, fast and elastic NoSQL database built by the team behind Memcached.  It is completely compatible with the on-the-wire protocol of memcached while providing persistence, replication and automatic rebalancing of data.\n\nThis ServerTemplate will install and start the Membase Server community edition, version 1.6.0.\n\nFor more information (support, pricing, feedback) please visit Membase at [http://www.membase.com](http://www.membase.com)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/10/13 23:43:27 +0000","version":9,"nickname":"RightScale Load Balancer with Apache/HAProxy - 11H1","updated_at":"2011/10/13 23:43:27 +0000","description":"Dedicated load balancer server with Apache and HAProxy.  No 'application' processing is installed.  The server acts as a load balancer that forwards requests to the registered backend application servers.  All requests are forwarded to separate application servers that are dynamically registered with this load balancer at boot time.  Can be configured for HTTPS (SSL).\n*----*\nThis ServerTemplate is part of a [compatibility release.](http://support.rightscale.com/12345-Guides/RightScale_Methodologies/Compatibility_Release)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/10/18 21:28:06 +0000","version":1,"nickname":"MuleSoft Tcat : Tomcat Server Template","updated_at":"2011/10/18 21:28:06 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/10/18 21:28:58 +0000","version":4,"nickname":"MuleSoft Tcat - Tomcat Admin Console Server Template","updated_at":"2011/10/18 21:28:58 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/11/02 16:35:20 +0000","version":26,"nickname":"Base ServerTemplate for Linux","updated_at":"2011/11/02 16:35:20 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/11/28 19:34:52 +0000","version":1,"nickname":"Tomcat6 Java or Grails (App, FrontEnd, Database & LDAP) - All In One v1","updated_at":"2011/11/28 19:34:52 +0000","description":"If you're using the RightScale premium server templates [Tomcat6 FrontEnd v9](http://www.rightscale.com/library/server_templates/Tomcat6-FrontEnd-v9/12345) and [Tomcat6 App Server v9](http://www.rightscale.com/library/server_templates/Tomcat6-App-Server-v9/12345) with a database on [MySQL 5.1 EBS v2](http://www.rightscale.com/library/server_templates/MySQL-5-1-EBS-v2/12345) and authentication with LDAP using my [OpenLDAP Directory Server v1.1](http://www.rightscale.com/library/server_templates/OpenLDAP-Directory-Server-v1-1/12345) to run your Java or Grails application in production, you need this template for development, QA, and testing!\n\n***\n\nThis template allows you to setup a single server which hosts all of the services provided by the servers you run in production.  This allows you to setup ancillary environments (QA, Staging, Development) which *almost* exactly mirror your production environment.\n\nMySQL Database Options\n-------------------\nThe template is also very flexible and configurable.  You can choose to load the database directly from the latest EBS snapshot of production, create a new empty database at boot, or restore the database from a previous S3 backup.\n\nBy loading the database from the production EBS snapshot you can quickly and easily create an instant mirror of your production server for testing new code, or a big update, or troubleshooting a problem in production.\n\nBy loading the database from an S3 backup you can run an on demand QA box with a psuedo persistent database backed up to S3 on a regular basis.  When your QA cycle is done, terminate the box secure in the knowledge that your configuration and QA data is still intact ready for the next QA cycle.\n\nBy creating a new empty database you have the freedom to populate it from scripts or other arbitrary backups, making an excellent development and test platform for specific issues and odd data combinations.\n\nLDAP Options\n-----------\nIf your application uses LDAP for authentication, you can launch an instance and load LDIF files stored in an S3 bucket.  If you're not using LDAP, you can opt to disable this service entirely.\n\nBest Practices\n-----------\nSince this template does run so many services, it's highly recommended that you launch it on an **m1.large** instance.  If you don't you're likely consume nearly all of the memory of an **m1.small** and will get critical alerts about low available memory.  Depending on your application, you might be willing/able to ignore these, but it's something you should be aware of."},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/12/01 23:20:19 +0000","version":1,"nickname":"CloudEnable Publish Test For Some other customer","updated_at":"2011/12/01 23:20:19 +0000","description":""},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/12/07 17:58:12 +0000","version":0,"nickname":"LNMP & Email Vhosting All-In-One with Nginx, PHP5-FPM, MySQL 5.1, and Postfix","updated_at":"2011/12/08 18:12:55 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting PHP based web sites/applications, as well as email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates an 8GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.  The default size for this partition is 2GB.  Combined with the 8GB root partition the total EBS footprint is exactly 10GB, the maximum for the AWS free tier.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 8GB EBS Volume $0.80/mo\n* 2GB EBS Volume $0.20/mo\n* 14GB EBS Snapshot Storage (The 2GB configuration/application data volume, full, with 7 days of history, which is the default) $2.10/mo\n\nThat totals out to $12.71/mo, which leaves $2.29 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LNMP Virtual Hosting ##\nThe web hosting environment is a full LNMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Nginx - 1.0.2\n* MySQL - 5.1.41-3 (Ubuntu 12.10)\n* PHP - 5.3.3-1 (Ubuntu 9.3)\n\n## Email Virtual Hosting ##\nIn addition to the LNMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.  **NOTE**: The default is 2GB\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# Change Log #\n* Rev 1\n  * Initial release\n* Rev 2\n  * Replaced Apache with Nginx\n  * Running PHP5 FPM application server rather than a PHP module for Apache or Nginx\n  * Dropped incomplete support for Zend Framework\n  * Dropped Gitosis as a default, since I imagine I'm the only person using it, and it's a bit out of place\n  * Added Alerts for critical systems and failure/limp conditions\n  * New MCI which includes RightLink 5.6.28 and creates an 8GB root partition rather than 10GB\n  * Added ability to connect this server with the [Opscode](http://www.opscode.com/platform/) Chef platform to further customize your instance\n\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * MySQL high load\n  * Low memory\n  * Nginx high load\n* Reconsider ZendFramework support\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":false,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/12/08 18:12:50 +0000","version":1,"nickname":"LNMP & Email Vhosting All-In-One with Nginx, PHP5-FPM, MySQL 5.1, and Postfix","updated_at":"2011/12/08 18:18:05 +0000","description":"# Description #\nThis is an All-In-One (AIO) server for hosting PHP based web sites/applications, as well as email for one or many domain names (virtual hosting).\n\n## Total Cost of Ownership ##\nThis ServerTemplate is designed to run within the confines of a [t1.micro](http://aws.amazon.com/ec2/instance-types/) EC2 instance.  A t1.micro instance requires that you use an EBS volume to store the operating system.  The MultiCloud Image this ServerTemplate uses automatically creates an 8GB EBS volume for this purpose.\n\nThis server template requires one additional EBS volume for storing configuration and application data, the size of which will vary based on what you're running.  The default size for this partition is 2GB.  Combined with the 8GB root partition the total EBS footprint is exactly 10GB, the maximum for the AWS free tier.\n\nWhen you first sign up for AWS you can take advantage of their [free tier](http://aws.amazon.com/free/) for all services for one year.\n\nWhile using this server template I've averaged $0.12 per month between EIP data transfer costs, and the additional EBS volume.\n\nAfter one year when the free tier expires, you can expect to spend under $15 per month if you pay for a t1.micro reserved instance, broken down thusly.\n\n* t1.micro reservation for 1 year $54 ($4.50/mo but billed once at the beginning)\n* 730hr t1.micro usage @$0.007/hr (Reserved cost in US-EAST cloud) $5.11/mo\n* 8GB EBS Volume $0.80/mo\n* 2GB EBS Volume $0.20/mo\n* 14GB EBS Snapshot Storage (The 2GB configuration/application data volume, full, with 7 days of history, which is the default) $2.10/mo\n\nThat totals out to $12.71/mo, which leaves $2.29 for data transfer, I/O requests and maybe some S3 storage.\n\nAs I personally run this more, I'll be able to give some more real world data, rather than just estimates.  The point though, is that this is dirt cheap given the control you have!\n\n## LNMP Virtual Hosting ##\nThe web hosting environment is a full LNMP stack consisting of;\n\n* Linux - Ubuntu 10.04\n* Nginx - 1.0.2\n* MySQL - 5.1.41-3 (Ubuntu 12.10)\n* PHP - 5.3.3-1 (Ubuntu 9.3)\n\n## Email Virtual Hosting ##\nIn addition to the LNMP stack, a Postfix server is installed and configured for virtual hosting of one or many email domains.  Currently, the postfix server is configured to relay email for configured email addresses (more information on that below) to one or more other email addresses.  I use this to accept email for a domain, and effectively \"forward\" it to my gmail account where I manage all of my email.\n\n# Usage #\n\n## Prerequisites ##\n\n### Elastic IP ###\nIt is *HIGHLY* recommended that you setup an Elastic IP for your server instance.  This will make things like vertical scaling and disaster recovery easier.\n\nAlso, if you're going to be serious about running an email server, using an EIP is the only way to go so you don't get blacklisted etc.  Setup an EIP, then make sure you fill out [this form](https://aws-portal.amazon.com/gp/aws/html-forms-controller/contactus/ec2-email-limit-rdns-request) to setup a reverse DNS record for your hostname (like mail.yourdomain.com) to your EIP.  You can read about why this is important [here](http://www.simpledns.com/kb.aspx?kbid=1052)\n\n### Security Groups ###\nYou'll need to be able to communicate with your server from the interwebs.  This means you'll need to open some ports in one or more security groups, and add your server instance to those security groups.\n\nAs a best practice, try to avoid making all of your changes to the \"default\" security group.  It's also better if you put the ports for each service in it's own security group, though just one security group which opens all ports for this server instance is probably okay too.  Here are the ports that are required to be able to communicate with this server.\n\n* SSH - TCP:22\n* SMTP - TCP:25\n* HTTP - TCP:80\n* HTTPS - TCP:443\n\n## Launching for the first time ##\nIf you've just imported this ServerTemplate from the library, here's what you need to know to get started.\n\n### Inputs ###\n* Database Admin Password\n\n  Pick a secure password for the database administrator.  The default administrator username is \"administrator\".  It's possible that you'll never need to use these credentials since the Chef recipes set everything up for you, but it's good to have in case of emergency or for administrative tasks not covered in an operational script etc.\n\n* Postfix MySQL Database Password\n\n  Pick a secure password for the user account that postfix will use to access the MySQL database.  Did I mention that Postfix configuration information is stored in MySQL?  I promise, I'll explain later.\n* EBS Volume Size in GB\n\n  This server stores all of the data which needs to be persistent on a separate EBS volume to ease backups, disaster recovery, and vertical scaling.  Specify an EBS volume size here that makes sense for the data you're storing, including git repositories, MySQL databases and your web site/application html and code files.  **NOTE**: The default is 2GB\n\nIf you're in a hurry, and just wanted to get this up and running quickly, that's all you'll need to know.\n\n## Disaster Recovery or Vertical Scaling ##\nAs mentioned, all of the configuration and application data for all the services is stored on an EBS volume.  That EBS volume has a snapshot taken of it once per day.  Those snapshots can be used to start a new instance of this server with the data and configuration exactly as it was at that point in time.\n\nThis is useful for vertical scaling.  I.E. Using a bigger, badder EC2 instance type to manage more traffic.  It's also useful for disaster recovery.\n\nTo bring up a new instance from a snapshot, these are the steps.\n\n1. Find the AWS ID of the latest snapshot for your data volume\n  * Alternate first step is to create a snapshot \"right now\" by running the \"rjg_utils::aio_ebs_volume_snapshot\" recipe on the current instance.\n2. Add a new server to your deployment using this ServerTemplate\n3. Click \"Launch\" and set all of your inputs to the desired values\n4. For the \"EBS Volume Snapshot Id\", replace the value \"blank\" with the AWS ID of the snapshot you acquired in step 1\n5. Launch the new instance\n6. Run the \"web_apache::enable_site_vhost\" or \"app_wordpress::deploy\" (which ever is appropriate) once for each vhosted domain this server answers for.\n7. Verify web and email vhosts are working properly (change /etc/hosts file to point to new IP etc)\n8. Change your DNS records from the IP of the old instance, to the new one\n  * **Pro Tip**: Or, if you're using an Elastic IP, just reassign the the EIP to the new instance\n9. Once DNS records are propagated, or EIP remap is finished, decommission old instance\n10. Clean up EBS volume and snapshots of old instance\n  * See \"Managing Artifacts\" below\n\n# Configuring Services #\n\n## Wordpress Powered Website ##\nIf you want to host a Wordpress powered website, you're only a few inputs and clicks away\n\nInputs\n1. MySQL Database Password for this Wordpress instance\n  Pick a secure password which Wordpress will use to access the database.  The Wordpress configuration file will automatically be created with this information\n2. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n3. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\n## Website ##\nIf you want to host a website that's just static HTML, or a mix of HTML and some PHP files, you can set it up by running the \"web_apache::enable_site_vhost\" script.\n\nThis script takes only two inputs.\n1. VHOST Aliases\n  The possible hostname aliases (if any) for the vhost.  For instance to host the same content at www.yourdomain.com and yourdomain.com simply put \"yourdomain.com\" here.  Many values can be supplied, separated by spaces.  If you don't want any aliases leave the text \"blank\" in this field.  \"blank\" is a magic word that is used to work around some issues in the current version of RightLink\n2. VHOST FQDN\n  The fully qualified domain name (FQDN) of the new vhost to create.  Example www.apache.org\n\nRunning the script will create the necessary configuration file(s) for Apache2.  The root directory for the new website will be /mnt/www/<VHOST FQDN>/htdocs.  Put the your web files there and you're all set!\n\n## Postfix Email Relaying ##\nThe configuration for postfix is stored in a MySQL database, thus the input attributes for a postfix MySQL user, database, and password.  Right now, you'll need to get right into the MySQL commandline in order to manipulate the configuration but there are plans to make this much more user friendly in the future.\n\n### Virtual Domains ###\nThe first thing you'll need to do is tell postfix which domain names it'll be handling email for.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each domain you want to handle email for, run the following MySQL query.\n\n_INSERT INTO transport (domain,destination) VALUES ('yourdomain.com','virtual:')_\n\nWhere 'yourdomain.com' is the domain name you want to handle email for.\n\n### Virtual User Aliases ###\nOnce you've defined the domain names that you'll be handling email for, you'll want to setup which email addresses you'll be accepting email for, and what email address to relay them to.\n\nWhen connected to the server with SSH, type `mysql` to get into a mysql commandline client.  Then type `use postfix;` to select the postfix configuration database.  If you supplied a different database name for the postfix configuration, substitute that in the use command.  Then, for each email address you want to accept email for, run the following MySQL query.\n\n_INSERT INTO virtual (email,destination) VALUES ('you@yourdomain.com','you@gmail.com')_\n\nThe first value is the email address which your server will accept email for.  The 'yourdomain.com' must already be in transport table, which you would have added in the \"Virtual Domains\" section above.\n\nThe second value is the email address you want any emails sent to the 'you@yourdomain.com' relayed to.  It's just that easy!\n\nYou can specify many different email addresses to be relayed to the same destination address.  You can also specify a \"catchall\" destination for a domain by excluding the user.  I.E. Supplying '@yourdomain.com' for the first value, and 'you@gmail.com' as the second value would route any email sent to any address @yourdomain.com to your gmail address.  It's not advisable, but it can be done.\n\n# Managing Artifacts #\nWe've mentioned a couple times above that this server uses an EBS volume to store configuration and application data.  The creation of that EBS volume, and the creation of the snapshots for backups is fully automated.  The number of EBS snapshots for the current instance is even kept in check by the \"aio_ebs_snapshots_to_keep\" attribute.\n\nHowever, when you launch a new instance to replace an existing one, some EBS artifacts get left behind which will need to be manually cleaned up.  Below you'll find information on what things to look out for.  Automating this cleanup is VERY high on my priority list for enhancements of this ServerTemplate.\n\n## EBS Volumes ##\nWhen you terminate a running instance of this server template, the automatically created EBS volume is not deleted.  So after performing the steps from the \"Disaster Recovery or Vertical Scaling\" section above, you'll want to look at the EBS volumes in the same region as the terminated instance, and go ahead and delete it.\n\nYou may want to verify that you have a current snapshot of the volume first, though you would probably have already done that before launching a new instance and terminating the old one.\n\n## EBS Snapshots ##\nSnapshots of the old EBS volume associated with a terminated instance are not automatically deleted by the backup script based on the \"aio_ebs_snapshots_to_keep\" attribute.  This is because the snapshots are not associated with the new volume or instance, so the script has no way of knowing that they are related.\n\nAs a result, you'll want to delete old snapshots which belong to terminated instances and/or deleted EBS volumes.\n\n# Change Log #\n* Rev 1\n  * Initial release\n* Rev 2\n  * Replaced Apache with Nginx\n  * Running PHP5 FPM application server rather than a PHP module for Apache or Nginx\n  * Dropped incomplete support for Zend Framework\n  * Dropped Gitosis as a default, since I imagine I'm the only person using it, and it's a bit out of place\n  * Added Alerts for critical systems and failure/limp conditions\n  * New MCI which includes RightLink 5.6.28 and creates an 8GB root partition rather than 10GB\n  * Added ability to connect this server with the [Opscode](http://www.opscode.com/platform/) Chef platform to further customize your instance\n\n\n# TODO #\n* Setup a default vhost\n  * Including an SSL vhost that hosts various tools like phpmyadmin and a management tool for email configuration etc.\n* More alerts\n  * Postfix high load\n  * MySQL high load\n  * Low memory\n  * Nginx high load\n* Reconsider ZendFramework support\n* Enable gitweb (probably within aforementioned SSL vhost)\n* Installation/Deployment/management recipes for Drupal? Maybe?\n* Full and proper email stack (local delivery, pop3, imap, ldap configuration)"},{"is_head_version":true,"href":"https://my.rightscale.com/api/acct/12345/ec2_server_templates/12345","created_at":"2011/12/21 01:59:49 +0000","version":0,"nickname":"Base ServerTemplate for Linux (EBS)","updated_at":"2011/12/21 02:00:11 +0000","description":"This ServerTemplate is a starting point for custom ServerTemplate development. This template includes the following:\n* Basic set of scripts for a RightLink-based server with logging, monitoring, alerts, etc.\n* MultiCloud Images that reference the latest supported images with a frozen software repository date that has been tested.\n* Basic set of alerts for most server type monitoring.\n* Examples of system required input variables. \n\nSupported compute clouds:\n\n    * Amazon Web Services EC2\n    * CloudStack from Cloud.com - Beta\n    * Eucalyptus - Beta\n    * OpenStack - Alpha\n    * Rackspace - Beta\n"}]