<?xml version="1.0" encoding="UTF-8"?>
<client>
  <commands>
  
    <!-- Start Deployments -->    
    <command name="deployments" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get a list of all deployments in the account</doc>
      <param name="path" type="string" doc="Path of request" static="deployments{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="filter" doc="An array of filters in the form 'attribute_name=|&lt;&gt;attribute_value'" required="false" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="deployment" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get a deployment by it's id</doc>
      <param name="path" type="string" static="deployments/{{id}}{{output_format}}" />      
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Deployment" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="deployments_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a new deployment</doc>
      <param name="path" type="string" static="deployments" />      
      <param name="method" type="string" static="POST" />
      <param name="deployment[nickname]" type="string" required="true" />
      <param name="deployment[description]" type="string" required="true" />
      <param name="deployment[default_vpc_subnet_href]" type="string" required="false" />
      <param name="deployment[default_ec2_availability_zone]" type="string" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Deployment" />
    </command>
    
    <command name="deployments_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete a deployment by it's id</doc>
      <param name="path" type="string" static="deployments/{{id}}" />      
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="deployments_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Update an existing deployment by it's id</doc>
      <param name="path" type="string" static="deployments/{{id}}" />      
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="deployment[nickname]" type="string" required="false" />
      <param name="deployment[description]" type="string" required="false" />
      <param name="deployment[default_vpc_subnet_href]" type="string" required="false" />
      <param name="deployment[default_ec2_availability_zone]" type="string" required="false" />
      <param name="deployment[parameters]" type="array" required="false" />
    </command>
    
    <command name="deployments_duplicate" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Duplicate/clone a deployment by it's id</doc>
      <param name="path" type="string" static="deployments/{{id}}/duplicate" />      
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="deployments_start_all" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Start all servers in a deployment</doc>
      <param name="path" type="string" static="deployments/{{id}}/start_all" />      
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="deployments_stop_all" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Start all servers in a deployment</doc>
      <param name="path" type="string" static="deployments/{{id}}/stop_all" />      
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <!-- Start SSH Keys -->
    <command name="ec2_ssh_keys_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a new SSH Key</doc>
      <param name="path" type="string" static="ec2_ssh_keys" />
      <param name="method" type="string" static="POST" />
      <param name="ec2_ssh_key[aws_key_name]" type="string" required="true" />
      <param name="cloud_id" type="integer" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\SshKey" />
    </command>
    
    <command name="ec2_ssh_keys_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Destroy an SSH Key</doc>
      <param name="path" type="string" static="ec2_ssh_keys/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="ec2_ssh_key" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show an SSH Key</doc>
      <param name="path" type="string" static="ec2_ssh_keys/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\SshKey" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <!-- Start Security Groups -->
    <command name="ec2_security_groups_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a new security group</doc>
      <param name="path" type="string" static="ec2_security_groups" />
      <param name="method" type="string" static="POST" />
      <param name="ec2_security_group[aws_group_name]" type="string" required="true" />
      <param name="ec2_security_group[aws_description]" type="string" required="true" />
      <param name="cloud_id" type="integer" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\SecurityGroup" />
    </command>
    
    <command name="ec2_security_groups_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Destroy a Security Group</doc>
      <param name="path" type="string" static="ec2_security_groups/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="ec2_security_group" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Destroy a Security Group</doc>
      <param name="path" type="string" static="ec2_security_groups/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\SecurityGroup" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="ec2_security_groups" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Security Groups</doc>
      <param name="path" type="string" static="ec2_security_groups{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
      <param name="cloud_id" type="integer" required="false" />      
    </command>
    
    <command name="ec2_security_groups_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates a Security Group by adding permissions</doc>
      <param name="path" type="string" static="ec2_security_groups/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="ec2_security_group[owner]" type="string" required="false" />
      <param name="ec2_security_group[group]" type="string" required="false" />
      <param name="ec2_security_group[cidr_ips]" type="string" required="false" />
      <param name="ec2_security_group[protocol]" type="string" required="false" />
      <param name="ec2_security_group[from_port]" type="integer" required="false" />
      <param name="ec2_security_group[to_port]" type="integer" required="false" />
    </command>
    
    <!-- Start ServerTemplates -->
    <command name="ec2_server_templates" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all ServerTemplates</doc>
      <param name="path" type="string" static="ec2_server_templates{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <!-- Start MultiCloudImages -->
    <command name="multi_cloud_images" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all MultiCloudImages</doc>
      <param name="path" type="string" static="multi_cloud_images{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="multi_cloud_image" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show a MultiCloudImage</doc>
      <param name="path" type="string" static="multi_cloud_images/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\MultiCloudImage" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <!-- Start Tags -->
    <command name="tags_taggable_resources" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Lists all taggable resources</doc>
      <param name="path" type="string" static="tags/taggable_resources{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="tags_set" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Sets tags</doc>
      <param name="path" type="string" static="tags/set" />
      <param name="method" type="string" static="PUT" />
      <param name="resource_href" type="string" required="true" />
      <param name="tags" type="array" required="true" />
    </command>
    
    <command name="tags_unset" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Unsets tags</doc>
      <param name="path" type="string" static="tags/unset" />
      <param name="method" type="string" static="PUT" />
      <param name="resource_href" type="string" required="true" />
      <param name="tags" type="array" required="true" />
    </command>
    
    <command name="tags_search" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Finds objects by their tag</doc>
      <param name="path" type="string" static="tags/search{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="resource_href" type="string" required="false" />
      <param name="resource_type" type="string" required="false" />
      <param name="match_all" type="string" required="false" />
      <param name="tags" type="array" required="false" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <!-- Start Servers -->
    <command name="servers_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a new server</doc>
      <param name="path" type="string" static="servers" />
      <param name="method" type="string" static="POST" />
      <param name="server[nickname]" type="string" required="true" />
      <param name="server[ec2_ssh_key_href]" type="string" required="false" />
      <param name="server[ec2_security_groups_href]" type="array" required="false" />
      <param name="server[server_template_href]" type="string" required="false" />
      <param name="server[deployment_href]" type="string" required="false" />
      <param name="server[instance_type]" type="enum:t1.micro,m1.small,m1.large,m1.xlarge,m2.xlarge,m2.2xlarge,m2.4xlarge,c1.medium,c1.xlarge,cc1.4xlarge,cc2.8xlarge,cg1.4xlarge" required="false" />
      <param name="server[pricing]" type="enum:on_demand,spot" required="false" />
      <param name="server[aki_image_href]" type="string" required="false" />
      <param name="server[ari_image_href]" type="string" required="false" />
      <param name="server[ec2_image_href]" type="string" required="false" />
      <param name="server[multi_cloud_image_href]" type="string" required="false" />
      <param name="server[vpc_subnet_href]" type="string" required="false" />
      <param name="server[ec2_user_data]" type="string" required="false" />
      <param name="server[ec2_elastic_ip_href]" type="string" required="false" />
      <param name="server[associate_eip_at_launch]" type="boolean" required="false" />
      <param name="server[ec2_availability_zone]" type="string" required="false" />
      <param name="server[max_spot_price]" type="float" required="false" />
      <param name="cloud_id" type="integer" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />      
    </command>
    
    <command name="servers_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates a server</doc>
      <param name="path" type="string" static="servers/{{id}}" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="method" type="string" static="PUT" />
      <param name="server[nickname]" type="string" required="false" />
      <param name="server[ec2_ssh_key_href]" type="string" required="false" />
      <param name="server[ec2_security_groups_href]" type="array" required="false" />
      <param name="server[server_template_href]" type="string" required="false" />
      <param name="server[deployment_href]" type="string" required="false" />      
      <param name="server[instance_type]" type="enum:t1.micro,m1.small,m1.large,m1.xlarge,m2.xlarge,m2.2xlarge,m2.4xlarge,c1.medium,c1.xlarge,cc1.4xlarge,cc2.8xlarge,cg1.4xlarge" required="false" />
      <param name="server[pricing]" type="enum:on_demand,spot" required="false" />
      <param name="server[aki_image_href]" type="string" required="false" />
      <param name="server[ari_image_href]" type="string" required="false" />
      <param name="server[ec2_image_href]" type="string" required="false" />
      <param name="server[multi_cloud_image_href]" type="string" required="false" />
      <param name="server[vpc_subnet_href]" type="string" required="false" />
      <param name="server[ec2_user_data]" type="string" required="false" />
      <param name="server[ec2_elastic_ip_href]" type="string" required="false" />
      <param name="server[associate_eip_at_launch]" type="boolean" required="false" />
      <param name="server[ec2_availability_zone]" type="string" required="false" />
      <param name="server[max_spot_price]" type="float" required="false" />
      <param name="server[lock]" type="enum:true,false" required="false" />
      <param name="server[parameters]" type="array" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />      
    </command>
    
    <command name="servers_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Destroy a Server</doc>
      <param name="path" type="string" static="servers/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />
    </command>
    
    <command name="servers" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Servers</doc>
      <param name="path" type="string" static="servers{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="filter" doc="An array of filters in the form 'attribute_name=|&lt;&gt;attribute_value'" required="false" />
      <param name="cloud_id" type="integer" required="false" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>    
    
    <command name="server" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get a server by it's id</doc>
      <param name="path" type="string" static="servers/{{id}}{{output_format}}" />      
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="servers_start" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Launches the server</doc>
      <param name="path" type="string" static="servers/{{id}}/start" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[parameters]" type="array" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
    </command>
    
    <command name="servers_stop_ebs" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>'stops' a running server</doc>
      <param name="path" type="string" static="servers/{{id}}/stop_ebs" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[ignore_lock]" type="boolean" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
    </command>
    
    <command name="servers_start_ebs" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>'starts' a server which is 'stopped'</doc>
      <param name="path" type="string" static="servers/{{id}}/start_ebs" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[parameters]" type="array" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
    </command>
    
    <command name="servers_stop" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminates the running server</doc>
      <param name="path" type="string" static="servers/{{id}}/stop" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[ignore_lock]" type="boolean" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
    </command>
    
    <command name="servers_reboot" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Reboots the running server</doc>
      <param name="path" type="string" static="servers/{{id}}/reboot" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[ignore_lock]" type="boolean" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />
    </command>
    
    <command name="servers_run_script" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Runs a RightScript on the server</doc>
      <param name="path" type="string" static="servers/{{id}}/run_script" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[right_script_href]" type="string" required="true" />
      <param name="server[parameters]" type="array" required="false" />
      <param name="server[ignore_lock]" type="boolean" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />      
    </command>
    
    <command name="servers_executable" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Runs a RightScript or Chef recipe on the server</doc>
      <param name="path" type="string" static="servers/{{id}}/run_executable" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[right_script_href]" type="string" required="false" />
      <param name="server[recipe]" type="string" required="false" />
      <param name="server[parameters]" type="array" required="false" />
      <param name="server[ignore_lock]" type="boolean" required="false" />
      <param name="return_class" type="string" static="Guzzle\Rs\Model\Server" />      
    </command>
    
    <command name="servers_attach_volume" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Attaches an EBS volume to the server</doc>
      <param name="path" type="string" static="servers/{{id}}/attach_volume" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" />
      <param name="server[ec2_ebs_volume_href]" type="string" required="true" />
      <param name="server[device]" type="string" required="true" />      
    </command>
    
    <command name="servers_settings" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Gets detailed settings of the server</doc>
      <param name="path" type="string" static="servers/{{id}}/settings{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="servers_get_sketchy_data" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Retrieve the monitoring raw data of a certain time period</doc>
      <param name="path" type="string" static="servers/{{id}}/get_sketchy_data{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" />
      <param name="start" type="integer" required="true" doc="The number of seconds in the past" />
      <param name="end" type="integer" required="true" doc="The number of seconds in the past" />
      <param name="plugin_name" type="string" required="true" doc="The name of the collectd plugin (e.g. mysql, cpu-0)" />
      <param name="plugin_type" type="string" required="true" doc="The type of the instance of the plugin (e.g. cpu-idle, cpu-wait, count)" />
      <param name="variable" type="string" required="false" doc="The name of the collectd metric variable, example disk_ops" />
      <param name="resolution" type="string" required="false" doc="The RRA resolution, maybe an integer rather than a string" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>    
    
    <command name="servers_current_show" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get a current running server by it's id</doc>
      <param name="path" type="string" static="servers/{{id}}/current{{output_format}}" />      
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>    
    
    <command name="servers_current_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates the parameters of a running server</doc>
      <param name="path" type="string" static="servers/{{id}}/current" />      
      <param name="method" type="string" static="PUT" />      
      <param name="id" type="integer" required="true" location="path" />
      <param name="server[parameters]" type="array" required="false" />
    </command>
    
    <command name="servers_current_settings" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Gets detailed settings of the running server</doc>
      <param name="path" type="string" static="servers/{{id}}/current/settings{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="servers_alert_specs" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Gets the alert specs for a server</doc>
      <param name="path" type="string" static="servers/{{id}}/alert_specs{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="servers_monitoring" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Gets the list of monitors for a server</doc>
      <param name="path" type="string" static="servers/{{id}}/monitoring{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="servers_monitoring_graph_name" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Gets details for a specific monitor for a server</doc>
      <param name="path" type="string" static="servers/{{id}}/monitoring/{{graph_name}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="graph_name" type="string" required="true" location="path" />
      <param name="size" type="enum:tiny,small,large,xlarge" required="true" />
      <param name="period" type="enum:now,day,yday,week,lweek,month,quarter,year" required="true" />
      <param name="tz" type="string" required="false" />
      <param name="title" type="string" required="false" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <!-- Start AlertSpecs -->
    <command name="alert_specs" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Alert Specs</doc>
      <param name="path" type="string" static="alert_specs{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>    
    
    <command name="alert_spec" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get an alert_spec by it's id</doc>
      <param name="path" type="string" static="alert_specs/{{id}}{{output_format}}" />      
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <!-- <param name="return_class" type="string" static="Guzzle\Rs\Model\AlertSpec" /> -->
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <command name="alert_specs_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete an Alert Spec</doc>
      <param name="path" type="string" static="alert_specs/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="alert_specs_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an Alert Spec</doc>
      <param name="path" type="string" static="alert_specs" />
      <param name="method" type="string" static="POST" />
      <param name="alert_spec[name]" type="string" required="true" />
      <param name="alert_spec[file]" type="string" required="true" />
      <param name="alert_spec[variable]" type="string" required="true" />
      <param name="alert_spec[condition]" type="enum:&gt;,&gt;=,&lt;,&lt;=,==,!=" required="true" />
      <param name="alert_spec[threshold]" type="string" required="true" />
      <param name="alert_spec[escalation_name]" type="string" required="false" />
      <param name="alert_spec[duration]" type="integer" required="true" />
      <param name="alert_spec[description]" type="string" required="false" />
      <param name="alert_spec[subject_type]" type="enum:Server,ServerTemplate" required="true" />
      <param name="alert_spec[subject_href]" type="string" required="true" />
      <param name="alert_spec[action]" type="enum:escalate,vote" required="true" />
      <param name="alert_spec[vote_tag]" type="string" required="false" />
      <param name="alert_spec[vote_type]" type="enum:grow,shrink" required="false" />
    </command>
    
    <command name="alert_specs_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an Alert Spec</doc>
      <param name="path" type="string" static="alert_specs/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="alert_spec[name]" type="string" required="false" />
      <param name="alert_spec[file]" type="string" required="false" />
      <param name="alert_spec[variable]" type="string" required="false" />
      <param name="alert_spec[condition]" type="enum:&gt;,&gt;=,&lt;,&lt;=,==,!=" required="false" />
      <param name="alert_spec[threshold]" type="string" required="false" />
      <param name="alert_spec[escalation_name]" type="string" required="false" />
      <param name="alert_spec[duration]" type="integer" required="false" />
      <param name="alert_spec[description]" type="string" required="false" />
      <param name="alert_spec[action]" type="enum:escalate,vote" required="false" />
      <param name="alert_spec[vote_tag]" type="string" required="false" />
      <param name="alert_spec[vote_type]" type="enum:grow,shrink" required="false" />
    </command>
    
    <!-- Start Alert Spec Subjects -->    
    <command name="alert_spec_subjects_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an Alert Spec Subject</doc>
      <param name="path" type="string" static="alert_spec_subjects" />
      <param name="method" type="string" static="POST" />
      <param name="alert_spec_subject[alert_spec_href]" type="string" required="true" />
      <param name="alert_spec_subject[subject_href]" type="string" required="true" />
      <param name="alert_spec_subject[subject_type]" type="enum:Server,ServerTemplate" required="true" />
    </command>
    
    <!-- Start Audit Entries -->
    <command name="audit_entry" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Get an alert_spec by it's id</doc>
      <param name="path" type="string" static="audit_entries/{{id}}{{output_format}}" />      
      <param name="method" type="string" static="GET" />      
      <param name="id" type="integer" required="true" location="path" />
      <!-- <param name="return_class" type="string" static="Guzzle\Rs\Model\AuditEntry" /> -->
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
    </command>
    
    <!-- Start EBS Volumes -->    
    <command name="ec2_ebs_volumes_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an EBS Volume</doc>
      <param name="path" type="string" static="ec2_ebs_volumes" />
      <param name="method" type="string" static="POST" />
      <param name="ec2_ebs_volume[nickname]" type="string" required="true" />
      <param name="ec2_ebs_volume[description]" type="string" required="false" />
      <param name="ec2_ebs_volume[ec2_availability_zone]" type="string" required="true" />
      <param name="ec2_ebs_volume[aws_size]" type="integer" required="true" />
      <param name="cloud_id" type="integer" required="false" default="1" />
    </command>
    
    <command name="ec2_ebs_volumes_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete an EBS Volume</doc>
      <param name="path" type="string" static="ec2_ebs_volumes/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="ec2_ebs_volumes" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all EBS Volumes</doc>
      <param name="path" type="string" static="ec2_ebs_volumes{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
      <param name="cloud_id" type="integer" required="false" default="1" />      
    </command>
    
    <command name="ec2_ebs_volume" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows one EBS Volume</doc>
      <param name="path" type="string" static="ec2_ebs_volumes/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
        
    <command name="ec2_ebs_volumes_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates an EBS Volume</doc>
      <param name="path" type="string" static="ec2_ebs_volumes/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="ec2_ebs_volume[nickname]" type="string" required="false" />
      <param name="ec2_ebs_volume[description]" type="string" required="false" />
    </command>
    
    <!-- Start Component EBS Volumes -->    
    <command name="component_ec2_ebs_volumes_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an EBS Volume Mapping to a Server</doc>
      <param name="path" type="string" static="component_ec2_ebs_volumes" />
      <param name="method" type="string" static="POST" />
      <param name="component_ec2_ebs_volume[component_href]" type="string" required="true" />
      <param name="component_ec2_ebs_volume[ec2_ebs_volume_href]" type="string" required="true" />
      <param name="component_ec2_ebs_volume[device]" type="string" required="true" />
      <param name="component_ec2_ebs_volume[mount]" type="string" static="boot" />
    </command>
    
    <command name="component_ec2_ebs_volumes_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete an EBS Volume Mapping to a Server</doc>
      <param name="path" type="string" static="component_ec2_ebs_volumes/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <!-- Start EBS Snapshots -->    
    <command name="ec2_ebs_snapshots_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an EBS Volume Snapshot</doc>
      <param name="path" type="string" static="ec2_ebs_snapshots" />
      <param name="method" type="string" static="POST" />
      <param name="ec2_ebs_snapshot[nickname]" type="string" required="true" />
      <param name="ec2_ebs_snapshot[description]" type="string" required="false" />
      <param name="ec2_ebs_snapshot[ec2_ebs_volume_id]" type="string" required="true" />
      <param name="ec2_ebs_snapshot[commit]" type="enum:explicit,implicit" default="implicit" />
    </command>
    
    <command name="ec2_ebs_snapshots_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete an EBS Volume Snapshots</doc>
      <param name="path" type="string" static="ec2_ebs_snapshots/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="ec2_ebs_snapshots" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all EBS Volume Snapshots</doc>
      <param name="path" type="string" static="ec2_ebs_snapshots{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />
      <param name="cloud_id" type="integer" required="false" default="1" />      
    </command>
    
    <command name="ec2_ebs_snapshot" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Shows one EBS Volume Snapshot</doc>
      <param name="path" type="string" static="ec2_ebs_snapshots/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
        
    <command name="ec2_ebs_snapshots_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Updates an EBS Volume Snapshot commit state</doc>
      <param name="path" type="string" static="ec2_ebs_snapshots/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="ec2_ebs_snapshot[commit_state]" type="enum:committed,uncommitted" required="true" />
    </command>
    
    <!-- Start Credentials -->        
    <command name="credentials_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a Credential</doc>
      <param name="path" type="string" static="credentials" />
      <param name="method" type="string" static="POST" />
      <param name="credential[name]" type="string" required="true" />
      <param name="credential[value]" type="string" required="true" />
      <param name="credential[description]" type="string" required="false" />
    </command>
    
    <command name="credentials_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete a Credential</doc>
      <param name="path" type="string" static="credentials/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="credentials" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Credentials</doc>
      <param name="path" type="string" static="credentials{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="credential" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show one Credential</doc>
      <param name="path" type="string" static="credentials/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
            
    <command name="credentials_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a Credential</doc>
      <param name="path" type="string" static="credentials/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="credential[name]" type="string" required="false" />
      <param name="credential[value]" type="string" required="false" />
      <param name="credential[description]" type="string" required="false" />
    </command>
    
    <!-- Start Elastic IPs -->        
    <command name="ec2_elastic_ips_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create an AWS Elastic IP</doc>
      <param name="path" type="string" static="ec2_elastic_ips" />
      <param name="method" type="string" static="POST" />
      <param name="ec2_elastic_ip[nickname]" type="string" required="true" />
      <param name="cloud_id" type="integer" required="false" default="1" />
    </command>
    
    <command name="ec2_elastic_ips_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete an AWS Elastic IP</doc>
      <param name="path" type="string" static="ec2_elastic_ips/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="ec2_elastic_ips" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Elastic IPs</doc>
      <param name="path" type="string" static="ec2_elastic_ips{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="ec2_elastic_ip" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show one Elastic IP</doc>
      <param name="path" type="string" static="ec2_elastic_ips/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <!-- Start Server Arrays -->        
    <command name="server_arrays_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a Server Array</doc>
      <param name="path" type="string" static="server_arrays" />
      <param name="method" type="string" static="POST" />
      <param name="cloud_id" type="integer" required="false" default="1" />
      <param name="server_array[nickname]" type="string" required="true" />
      <param name="server_array[description]" type="string" required="false" />
      <param name="server_array[deployment_href]" type="string" required="true" />
      <param name="server_array[array_type]" type="enum:alert,queue" required="true" />
      <param name="server_array[ec2_security_groups_href]" type="array" required="true" />
      <param name="server_array[server_template_href]" type="string" required="true" />
      <param name="server_array[ec2_ssh_key_href]" type="string" required="true" />
      <param name="server_array[ec2_availability_zone]" type="string" required="false" />
      <param name="server_array[indicator_href]" type="string" required="false" />
      <param name="server_array[audit_queue_href]" type="string" required="false" />
      <param name="server_array[collect_audit_entries]" type="integer" default="1" />
      <param name="server_array[voters_tag]" type="string" required="false" />
      <param name="server_array[elasticity][max_count]" type="integer" required="false" />
      <param name="server_array[elasticity][min_count]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_up_by]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_down_by]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_calm_time]" type="integer" required="false" doc="Time in minutes" />
      <param name="server_array[elasticity][decision_threshold]" type="integer" required="false" />
      <param name="server_array[elasticity_function]" type="enum:sqs_queue_size,sqs_item_age" required="false" />
      <param name="server_array[elasticity_params][items_per_instance]" type="integer" required="false" />
      <param name="server_array[elasticity_params][max_age]" type="integer" required="false" doc="Age in seconds" />
      <param name="server_array[elasticity_params][algorithm]" type="enum:avg_10,max_10" required="false" />
      <param name="server_array[elasticity_params][regexp]" type="string" required="false" />
      <param name="server_array[active]" type="enum:true,false" required="false" />      
      <param name="server_array[parameters]" type="array" required="false" />
    </command>
    
    <command name="server_arrays_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete a Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="server_arrays" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Server Arrays</doc>
      <param name="path" type="string" static="server_arrays{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="server_array" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show one Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
            
    <command name="server_arrays_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Update a Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server_array[nickname]" type="string" required="false" />
      <param name="server_array[description]" type="string" required="false" />
      <param name="server_array[deployment_href]" type="string" required="false" />
      <param name="server_array[array_type]" type="enum:alert,queue" required="false" />
      <param name="server_array[ec2_security_groups_href]" type="array" required="false" />
      <param name="server_array[server_template_href]" type="string" required="false" />
      <param name="server_array[ec2_ssh_key_href]" type="string" required="false" />
      <param name="server_array[indicator_href]" type="string" required="false" />
      <param name="server_array[audit_queue_href]" type="string" required="false" />
      <param name="server_array[collect_audit_entries]" type="integer" default="1" />
      <param name="server_array[voters_tag]" type="string" required="false" />
      <param name="server_array[elasticity][max_count]" type="integer" required="false" />
      <param name="server_array[elasticity][min_count]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_up_by]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_down_by]" type="integer" required="false" />
      <param name="server_array[elasticity][resize_calm_time]" type="integer" required="false" doc="Time in minutes" />
      <param name="server_array[elasticity][decision_threshold]" type="integer" required="false" />
      <param name="server_array[elasticity_function]" type="enum:sqs_queue_size,sqs_item_age" required="false" />
      <param name="server_array[elasticity_params][items_per_instance]" type="integer" required="false" />
      <param name="server_array[elasticity_params][max_age]" type="integer" required="false" doc="Age in seconds" />
      <param name="server_array[elasticity_params][algorithm]" type="string" required="false" />
      <param name="server_array[elasticity_params][regexp]" type="string" required="false" />
      <param name="server_array[active]" type="enum:true,false" required="false" />      
      <param name="server_array[parameters]" type="array" required="false" />
    </command>
    
    <command name="server_arrays_terminate_all" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Terminate all running instance in a Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}/terminate_all" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="server_arrays_launch" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Launches a server into a Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}/launch" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="server_arrays_instances" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Server Array instances</doc>
      <param name="path" type="string" static="server_arrays/{{id}}/instances{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="server_arrays_run_script_on_all" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Runs a script on all instances in a Server Array</doc>
      <param name="path" type="string" static="server_arrays/{{id}}/run_script_on_all" />
      <param name="method" type="string" static="POST" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="server_array[right_script_href]" type="string" required="true" />
      <param name="server_array[server_template_hrefs]" type="array" required="false" />      
      <param name="server_array[parameters]" type="array" required="false" />      
    </command>
    
    <!-- Start Macros -->
    <command name="macros_create" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Create a Macro</doc>
      <param name="path" type="string" static="macros" />
      <param name="method" type="string" static="POST" />
      <param name="macro[source_type]" type="enum:deployment,array,server,macro,blank" required="true" />
      <param name="macro[object_id]" type="integer" required="false" />
      <param name="macro[nickname]" type="string" required="false" />
      <param name="macro[description]" type="string" required="false" />
      <param name="macro[commands]" type="string" required="false" /> 
    </command>
    
    <command name="macros_destroy" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Delete a Macro</doc>
      <param name="path" type="string" static="macros/{{id}}" />
      <param name="method" type="string" static="DELETE" />
      <param name="id" type="integer" required="true" location="path" />      
    </command>
    
    <command name="macros" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>List all Macros</doc>
      <param name="path" type="string" static="macros{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" /> 
    </command>
    
    <command name="macro" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Show one Macro</doc>
      <param name="path" type="string" static="macros/{{id}}{{output_format}}" />
      <param name="method" type="string" static="GET" />
      <param name="id" type="integer" required="true" location="path" /> 
      <param name="output_format" type="enum:.js,.xml" default=".js" location="path" />      
    </command>
    
    <command name="macros_update" class="Guzzle.Rs.Command.DefaultCommand">
      <doc>Update a Macro</doc>
      <param name="path" type="string" static="macros/{{id}}" />
      <param name="method" type="string" static="PUT" />
      <param name="id" type="integer" required="true" location="path" />
      <param name="macro[nickname]" type="string" required="false" />
      <param name="macro[description]" type="string" required="false" />
      <param name="macro[commands]" type="string" required="false" /> 
    </command>        
    
  </commands>
</client>